'''
Author: DarkRix
'''

import concurrent.futures
import os
import re
import sys
import urllib.request
from datetime import datetime

from PySide6.QtCore import (QByteArray, QMetaObject, QRect,
                            QSize, Qt, QTimer)
from PySide6.QtGui import (QFont, QIcon,
                           QImage, QPixmap, QStandardItem, QStandardItemModel)
from PySide6.QtWidgets import (QAbstractSpinBox, QAbstractItemView,
                               QAbstractScrollArea, QApplication, QCheckBox, QFrame,
                               QLabel, QListView, QPushButton, QSpinBox, QMainWindow)

_gg = [None]

class MainWindow(QMainWindow):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setWindowIcon(QIcon(QPixmap(QSize(93, 93)).fromImage(QImage.fromData(QByteArray.fromBase64(b'')))))

class EqListV(QListView):
    def __init__(self, parent=None):
        super(EqListV, self).__init__(parent)

    def mousePressEvent(self, event):
        if not self.indexAt(event.position().toPoint()).isValid():
            self.clearSelection()

class Ui_EarthQuake(object):
    def setupUi(self, EarthQuake):
        if not EarthQuake.objectName():
            EarthQuake.setObjectName("EarthQuake")
        EarthQuake.resize(1115, 660)
        font = QFont()
        font.setFamilies(["Arial"])
        font.setPointSize(16)
        EarthQuake.setFont(font)
        EarthQuake.setStyleSheet("QWidget{color: Red;background: #2e2e2d;}")
        self.EqOneView = QLabel(EarthQuake)
        self.EqOneView.setObjectName("EqOneView")
        self.EqOneView.setGeometry(QRect(10, 10, 521, 421))
        self.EqOneView.setFont(font)
        self.EqOneView.setStyleSheet("QLabel{background: #1a1a1a;color: White;}")
        self.EqOneView.setFrameShape(QFrame.NoFrame)
        self.EqOneView.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.EqOneView.setIndent(-1)
        self.EqListView = EqListV(EarthQuake)
        self.EqListView.setObjectName("EqListView")
        self.EqListView.setGeometry(QRect(540, 0, 581, 661))
        self.EqListView.setFont(font)
        self.EqListView.setStyleSheet("QListView{background: #1a1a1a; color: White;}")
        self.EqListView.setFrameShape(QFrame.Box)
        self.EqListView.setViewMode(QListView.ListMode)
        self.EqListView.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.EqListView.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.EqListView.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.EqListView.setItemAlignment(Qt.AlignRight)
        self.EqListViewModel = QStandardItemModel(EarthQuake)
        self.RefreshButton = QPushButton(EarthQuake)
        self.RefreshButton.setObjectName("RefreshButton")
        self.RefreshButton.setGeometry(QRect(300, 560, 201, 61))
        self.RefreshButton.setFont(font)
        self.RefreshButton.setStyleSheet("QPushButton:checked{background: #080808;}\n"
"QPushButton{color: Red; background: #1a1a1a;}")
        self.RefreshButton.setCheckable(False)
        self.RefreshButton.setChecked(False)
        self.RefreshButton.clicked.connect(self.AutoRefreshButtons)
        self.AutoRefresh = QCheckBox(EarthQuake)
        self.AutoRefresh.setObjectName("AutoRefresh")
        self.AutoRefresh.setGeometry(QRect(20, 560, 121, 31))
        self.AutoRefresh.setFont(font)
        self.AutoRefresh.setLayoutDirection(Qt.LeftToRight)
        self.AutoRefresh.setStyleSheet("QCheckBox{background: #1a1a1a;}")
        self.RefreshRate = QSpinBox(EarthQuake)
        self.RefreshRate.setObjectName("RefreshRate")
        self.RefreshRate.setGeometry(QRect(130, 610, 81, 31))
        self.RefreshRate.setFont(font)
        self.RefreshRate.setStyleSheet("QSpinBox{background: #1a1a1a;color: Red;}")
        self.RefreshRate.setWrapping(False)
        self.RefreshRate.setFrame(True)
        self.RefreshRate.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.RefreshRate.setButtonSymbols(QAbstractSpinBox.UpDownArrows)
        self.RefreshRate.setMinimum(1)
        self.RefreshRate.setStepType(QAbstractSpinBox.DefaultStepType)
        self.RefreshRateLabel = QLabel(EarthQuake)
        self.RefreshRateLabel.setObjectName("RefreshRateLabel")
        self.RefreshRateLabel.setGeometry(QRect(20, 610, 101, 31))
        self.RefreshRateLabel.setFont(font)
        self.RefreshRateLabel.setStyleSheet("QLabel{background: #1a1a1a; color:Red;}")
        self.RefreshRateLabel.setLineWidth(0)
        self.RefreshRateLabel.setAlignment(Qt.AlignCenter)
        self.RefreshRateLabel2 = QLabel(EarthQuake)
        self.RefreshRateLabel2.setObjectName("RefreshRateLabel2")
        self.RefreshRateLabel2.setGeometry(QRect(214, 610, 21, 31))
        self.RefreshRateLabel2.setFont(font)
        self.RefreshRateLabel2.setStyleSheet("QLabel{background: #1a1a1a; color:Red;}")
        self.RefreshRateLabel2.setLineWidth(0)
        self.RefreshRateLabel2.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.Logo = QLabel(EarthQuake)
        self.Logo.setObjectName("Logo")
        self.Logo.setGeometry(QRect(20, 450, 91, 91))
        self.Logo.setPixmap(QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b''))))
        self.Logo.setStyleSheet("QLabel{background: #1a1a1a;}")
        self.TimeLabel = QLabel(EarthQuake)
        self.TimeLabel.setObjectName("TimeLabel")
        self.TimeLabel.setGeometry(QRect(340, 640, 201, 21))
        self.TimeLabel.setFont(font)
        self.TimeLabel.setStyleSheet("QLabel{background: #1a1a1a; color: White;}")
        self.TimeLabel.setAlignment(Qt.AlignCenter)
        self.label = QLabel(EarthQuake)
        self.label.setObjectName("label")
        self.label.setGeometry(QRect(130, 450, 391, 91))
        font2 = QFont()
        font2.setFamilies(["Arial"])
        font2.setPointSize(27)
        self.label.setFont(font2)
        self.label.setStyleSheet("QLabel{background: #1a1a1a;color: Orange;}")
        self.label.setAlignment(Qt.AlignCenter)
        self.Times = QTimer(EarthQuake)
        self.Times.timeout.connect(self.timeSet)
        self.Times.start(1000)
        self.AutoEarthqaukeRefresher = QTimer(EarthQuake)
        concurrent.futures.ThreadPoolExecutor(os.cpu_count()*9999).submit(self.One_Eq)
        self.retranslateUi(EarthQuake)

        QMetaObject.connectSlotsByName(EarthQuake)

    def AutoRefreshButtons(self):
        if not self.AutoRefresh.checkState() == Qt.Checked:
            if self.AutoRefresh.checkState() == Qt.Unchecked:
                self.AutoEarthqaukeRefresher.stop()
            _cc = concurrent.futures.ThreadPoolExecutor(os.cpu_count()*9999).submit(self.clearListView)
            _cc.result()
            concurrent.futures.ThreadPoolExecutor(os.cpu_count()*9999).submit(self.One_Eq)
        else:
            concurrent.futures.ThreadPoolExecutor().submit(self.clearListView)
            concurrent.futures.ThreadPoolExecutor().submit(self.One_Eq)
            self.AutoEarthqaukeRefresher.timeout.connect(self.AutoRefreshing)
            self.AutoEarthqaukeRefresher.start(int(self.RefreshRate.value() * 60) * 1000)

    def clearListView(self):
        [[self.EqListViewModel.removeRow(i) for i in range(self.EqListViewModel.rowCount())] for _ in range(7)]

    def timeSet(self):
        self.TimeLabel.setText(datetime.now().strftime('%Y/%m/%d %H:%M:%S'))

    def AutoRefreshing(self):
        concurrent.futures.ThreadPoolExecutor().submit(self.clearListView)
        concurrent.futures.ThreadPoolExecutor().submit(self.One_Eq)

    def One_tg(self, source, tag):
        _hd = source.decode()
        _ht = tag.split('.')[0]
        _tn = '.'.join(tag.split('.')[1:])
        _tgi = ''.join(_hd.split('<{} class="{}">'.format(_ht, _tn))[1:])
        _tgs = _tgi.split('</{}>'.format(_ht))[0].replace('  ', '').split('<{} '.format(_ht))[0]
        _tga = re.sub('(\n\n)', '', _tgs)
        _tgt = re.sub('<!.+\n', '', _tga).replace('><', '>\n<')
        return _tgt

    def One_r(self, d):
        _r0 = '発生時刻'
        _r1 = '震源地'
        _r2 = '最大震度'
        _r3 = 'マグニチュード'
        _r4 = '深さ'
        _r5 = '緯度/経度'
        _r6 = '情報'
        _rd0 = '・発生時刻: '
        _rd1 = '\n・震源地: '
        _rd2 = '\n・最大震度: '
        _rd3 = '\n・地震の規模: M'
        _rd4 = '\n・深さ: '
        _rd5 = '\n・緯度/経度: '
        _rd6 = '\n・津波情報: '
        _sw = '。'
        _eq = re.sub('([ ])', '', d)
        _eq1 = re.sub('(\n\n)', '', _eq)
        _eq2 = _eq1.replace(_r0, _rd0)
        _eq3 = _eq2.replace(_r1, _rd1)
        _eq4 = _eq3.replace(_r2, _rd2)
        _eq5 = _eq4.replace(_r3, _rd3)
        _eq6 = _eq5.replace(_r4, _rd4)
        _eq7 = _eq6.replace(_r5, _rd5)
        _eq8 = _eq7.replace(_r6, _rd6).split(_sw)[0]

        return _eq8.split('\n')

    def One_Eq(self):
        _u = "https://typhoon.yahoo.co.jp/weather/earthquake/"
        _ua = 'Mozilla/5.0 (Linux; U; Android 8.0; en-la; Nexus Build/JPG991) AppleWebKit/511.2 (KHTML, like Gecko) Version/5.0 Mobile/11S444 YJApp-ANDROID jp.co.yahoo.android.yjtop/4.01.1.5'
        _d = urllib.request.urlopen(urllib.request.Request(_u, headers={'User-Agent': _ua}), timeout=1000)
        _gg[0] = _d.read()
        _t = self.One_tg(_gg[0], 'div.eqDetail')

        _dq = str(_t)
        if '<td>1</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(255, 255, 255);}')
        if '<td>2</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(22, 101, 246);}')
        if '<td>3</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(22, 246, 102);}')
        if '<td>4</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(246, 234, 22);}')
        if '<td>5弱</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(246, 152, 22);}')
        if '<td>5強</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(246, 119, 22);}')
        if '<td>6弱</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(246, 44, 238);}')
        if '<td>6強</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(246, 67, 122);}')
        if '<td>7</td>' in _dq:
            self.EqOneView.setStyleSheet('QLabel{background: #1a1a1a;color: rgb(165, 67, 246);}')
        self.EqOneView.setText('\n\n'.join(self.One_r(''.join(re.findall('<.+>(.+)<.+>', _t)))))
        self.Hist_Main()

    def colorIcon(self, color):
        if color == 0: # Unknow
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'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')))
        if color == 10: # 1
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'iVBORw0KGgoAAAANSUhEUgAAAFsAAABbEAIAAADDxLKNAAAAAXNSR0IArs4c6QAAAMJlWElmTU0AKgAAAAgABgESAAMAAAABAAEAAAEaAAUAAAABAAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAAExAAIAAAARAAAAZodpAAQAAAABAAAAeAAAAAAAAABIAAAAAQAAAEgAAAABUGl4ZWxtYXRvciAyLjcuMwAAAASQBAACAAAAFAAAAK6gAQADAAAAAQABAACgAgAEAAAAAQAAAFugAwAEAAAAAQAAAFsAAAAAMjAyMzowMToxMCAxMjoxOTowNgBk6B94AAAACXBIWXMAAAsTAAALEwEAmpwYAAADrGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICAgICAgICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyI+CiAgICAgICAgIDx0aWZmOllSZXNvbHV0aW9uPjcyMDAwMC8xMDAwMDwvdGlmZjpZUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6WFJlc29sdXRpb24+NzIwMDAwLzEwMDAwPC90aWZmOlhSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpSZXNvbHV0aW9uVW5pdD4yPC90aWZmOlJlc29sdXRpb25Vbml0PgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8eG1wOkNyZWF0b3JUb29sPlBpeGVsbWF0b3IgMi43LjM8L3htcDpDcmVhdG9yVG9vbD4KICAgICAgICAgPHhtcDpDcmVhdGVEYXRlPjIwMjMtMDEtMTBUMTI6MTk6MDYrMDk6MDA8L3htcDpDcmVhdGVEYXRlPgogICAgICAgICA8eG1wOk1ldGFkYXRhRGF0ZT4yMDIzLTAxLTEwVDIwOjQyOjQyKzA5OjAwPC94bXA6TWV0YWRhdGFEYXRlPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+OTE8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFlEaW1lbnNpb24+OTE8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KTQbC0wAABk1JREFUeAHtnFfLJUUQhv3WNWcUcw6oKEbEhDmwuCyoICLijxDx3p8gCCKo13otCIoJ04VZWVaMmHPOOcD77EUt8/Uczzk1LlPzPhfLbE9Pzamq91T39PT5Vm4R2xhHoBGBNY12NzsCmyNgiVgKMyJgicwIkE+v7Q/BWnG0+FP0949nV8R24k3xh4h9+o+vEd+Kh0R/f58dIgIzJLKjuFYsc/tbxXcCO/uJU0RLOseIn8RfovsZEPGL4kvR7eOWZSLQlAihP1s8K7pJ2lccJTaKH0X8QNuKs8Qjgmq0m6D9F4FQEOX24gexRiAmrvpd/CY4+7qwRGLks46bEvlHnCM+ER+LeGNkRAvHpDb2OUjsLx4WnMU+xw+K18Ql4gxxh0CaDFg3iZfEYwKJtOpQ/CQ+XiwCTYkwk8DoG4Jqsbv4WzwhDhMk+HJBUr8XzEKQSPyI0f6VIp7l+GbRbT8zwNl7BbWk298ty0SgKRG+nc8L6gcVYifBYMEgwu35Hr8lqBDMIT4S2MEmAooSeVzQ8zRxnLhHYI17MSt6VbwssEOdWyYQvrYVgaZEGO8p5gcKZEHiMUfKXxG7iJ8FNQYpcBUSicNBHKTeE++IIwX2TxVIhHvR/o2gPrUcc3tWBJoS4QZ7ievFrwLpdG9/hOi2k+ZNgjkHfeKsJUrnM4HsutZop0/3rFuGiMAMicTvOglmjYTJY5xydj8cQwDzmBdE7LOHoIVB5DJB7YmPx/EqjnlgpvYw4+n2cUtWBGZIhIdMbra3+O8pQSJUi8PFuwJr1CeOeVRm2sughlC6z1BMe7HJo/LTIiscttONwBwSOVGQnp3F12JXQXtcmaBOUA/4N0qENRVWPr4Sd4nzxMWCOvGkuEAcKpghWRzddA7RMkMirG/ynb5dsJh2kSCpB4gbBE8W9KfqPCDeFjjAxJarmKNExxAEA9z5guU1hjasPSPiVT4eLgJNifB9ZRL6gWBdJK5wXCX2EU+JkwRrJ1+Ig8UOgqrAYy3DEA+6J4s9BdKJk19WUZEI85XjBfZ5hmJtN9aw4UI2NctNifD8wnjPN/s6QWpJG4lnLeQ5gVDOFUiKAYK6cptgPYP6xPGNgspB4rHGKirDEJJlGf4QQQsJo/8QyTtd4Gm0j9efi9he73ilf9cZ32zetZIS5h/ddzGt0DBHYV5C+unJOgcrKNQh7sI6SstabEdSfMIh6sc6wUJuvC/H9wlE3D1bqaVZRXCStHH8vpjXedZRojiwgDg4XizBiGmxa/u9oPK1xNF/bb2z3lK0RU55fXih2OLEhP9jiWxOPnOOK8SE9bCK6zMGmlWuKNTE1PtSwbaHQs6luTJRifAIfbXgrXJaRMsZmpxEeKXAAzxrMOVymuzQhCRygmC2wQuE5FgWNVdcImyAWi+QSNE8DuhWWYkcKzYI3goNGMXSpktJhFVaNkh7Epql29FLhK0ILHbFF4RZAbKdUUqEl2q8LIxbBZzOISIwSomw5YDNR0MExTZjBLwAH6Ph41UiMFGJsDE77rxfJTa9Tf1bu3svHdnJyUnkQ3Gn+FSMLGP/+8cd5Vxk3iixeZFfFE9hE9C88envX1YiDAT8foe/SMBWy/5w+Gw3AgUlwpbp+4V/69tN+bwtRSTCUEK14M/RzBsI929FYMQSiUPJo4L9+i1X3b5YBEYpETZL81SyzFDCrrPFArfMtYvdcWtdNUqJxB9+bq3ATee+k1sXmU5qszy1RLIiWdaOJVI2tVmOWSJZkSxrxxIpm9osxyyRrEiWtWOJlE1tlmOWSFYky9qxRMqmNssxSyQrkmXtWCJlU5vlmCWSFcmydiyRsqnNcswSyYpkWTuWSNnUZjlmiWRFsqwdS6RsarMcs0SyIlnWjiVSNrVZjlkiWZEsa8cSKZvaLMcskaxIlrVjiZRNbZZjlkhWJMvasUTKpjbLMUskK5Jl7VgiZVOb5ZglkhXJsnYskbKpzXLMEsmKZFk7lkjZ1GY5ZolkRbKsHUukbGqzHBvlXynKcv5ukWWtqh1XkaqZTfPLEkkLZVVDlkjVzKb5ZYmkhbKqIUukambT/LJE0kJZ1ZAlUjWzaX5ZImmhrGrIEqma2TS/LJG0UFY1ZIlUzWyaX5ZIWiirGrJEqmY2zS9LJC2UVQ1ZIlUzm+bXv55/tSOUMTyAAAAAAElFTkSuQmCC')))
        if color == 20: # 2
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'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2202ilLl6VN2u9NZ/JdXavjDAV6IqPI+nLAPHjx/3umE0YKmIyJeeUWlcud9CGLZsl9+sdvbtImJoek9e86eZZhp0wYONBhgUmDZR49gDDh0CLQQhIg3QaipYMqSJSNGGI3eufickbF8ecWKhdOHDevcWavFv5g7cuSyZRbL3r0ZGQpUCvNLXAovRGD4JoiUlEOHHI7z52/edLlghCCI0FCDQaVCEKAegASAnkEQR44AIHBaAR3C4zl37sYNlwvbgV88wo5lAYIc6UuX7thht2PJ99/v0EGrTUh4/XW1evjw776zWLA1GLEIYvXqMWNMpt27T59mmM2bYSzBUQTHOa495bskOcALkdxcWH0sXrxtm83WpEndujSNSqXLhSIDIqi8D0Fs3XrsGMNUqVKhAkkiLFwumESgJEGA5sFBDbUNJB91HXw+derqVafz2LG//nK52rePjQUFFLSYAQPat9dqQRthWeiLG9X++efxYxifLlxQxgzkYGn+5YUIdhoVFR5OUahUZmeDUonQKUxSXFzDhijagnn9+8OaZefO9HSGmTMnNZVbuIJCypXEEQj/u3z5zh23++efAXZcPvfNspj+99937yorF44rpf1dBETgt86RMHfupk1Wa4cOsH5B5RF+3Vxu4W+cSg4cOHfO6dyw4fBhmIjyP9WrV67MTTWwYiKIqVMHDNDrcXF7/35WVr46m18Lnxo0gJVU9eqVKqlUvku+WFP5v/gcKAIiuMjEZmvXjoigqAcPQAnlOvIFEZIECBgMsHxt27ZBA5o+fvzyZW5NVLNmWBhMU/CBpTLLtm4Nam/TprACcjqhHOpAWAb/otqLS2Ic1Vat2r3bbvcuozyXLAeKAZEePVq31mhwWVu5ckgISd68+eiRxxMeHhoKy12Awo0bDx9yU0C1avArf/AAxoO7dzMzESIWC74A2lTQ8oG1evWaMycnZ8yY997T6SZNgqUv6Cgu14oVsG4aP75nT52udev69Wl60SLQkBRwlCwU+ForAiJvvdW0qVqNg3/nztOnm80jRiQkaLVgUtPre/eeO9dsjo2NiqLplJSJE02mS5du33a7UUXt27ddO4qaNeunn2y2I0cuXeJUy7AwUGwbN65dm6J27jx1qqDOsWLFzp12O05kY8d2767T4eIWIQitWa1r1+7bV3Da4ns9JV08B3ghgr9XVEJPn752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')))
        if color == 30: # 3
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'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')))
        if color == 40: # 4
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'')))
        if color == 50: # 5-
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'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')))
        if color == 51: # 5+
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'iVBORw0KGgoAAAANSUhEUgAAAFsAAABbEAIAAADDxLKNAAAAAXNSR0IArs4c6QAAAMJlWElmTU0AKgAAAAgABgESAAMAAAABAAEAAAEaAAUAAAABAAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAAExAAIAAAARAAAAZodpAAQAAAABAAAAeAAAAAAAAABIAAAAAQAAAEgAAAABUGl4ZWxtYXRvciAyLjcuMwAAAASQBAACAAAAFAAAAK6gAQADAAAAAQABAACgAgAEAAAAAQAAAFugAwAEAAAAAQAAAFsAAAAAMjAyMzowMToxMCAxMjoxOTowNgBk6B94AAAACXBIWXMAAAsTAAALEwEAmpwYAAADrGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICAgICAgICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyI+CiAgICAgICAgIDx0aWZmOllSZXNvbHV0aW9uPjcyMDAwMC8xMDAwMDwvdGlmZjpZUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6WFJlc29sdXRpb24+NzIwMDAwLzEwMDAwPC90aWZmOlhSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpSZXNvbHV0aW9uVW5pdD4yPC90aWZmOlJlc29sdXRpb25Vbml0PgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8eG1wOkNyZWF0b3JUb29sPlBpeGVsbWF0b3IgMi43LjM8L3htcDpDcmVhdG9yVG9vbD4KICAgICAgICAgPHhtcDpDcmVhdGVEYXRlPjIwMjMtMDEtMTBUMTI6MTk6MDYrMDk6MDA8L3htcDpDcmVhdGVEYXRlPgogICAgICAgICA8eG1wOk1ldGFkYXRhRGF0ZT4yMDIzLTAxLTEwVDIwOjQzOjIwKzA5OjAwPC94bXA6TWV0YWRhdGFEYXRlPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+OTE8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFlEaW1lbnNpb24+OTE8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4K18nCCgAADsFJREFUeAHtXXlsVFUXn5n3Zp8uQAtladmhCGVR1oK17BhcWGQxLhBQhICicZdEA/olNVGDgtQQQFaXCgiRYCBQSiyUTSiLQqEUSkvZBNrpdPbly8/jS6edvnbamXbmtXf+mHlz77nLO/f3zj33vHvOlT94kJaWkCBjH8YBEQ4oRNJZMuPAfxxgEGFQqIMDDCJ1MIhl87WzQC7nebWa57t2TU2VyVwum612+qq58n8/PK/VOhwFBVlZHo/DYTZXpantn14/ZUp6uttdVlZcbLEcOvS//9VGzfIahwN1QkStjow0GKZNW7s2kA6UlaWnJyd7Q4Tj2rbt00el6tfvuedkMqfTavWtX6ns1i011eMxmx88AEDtdl8amYzj1Gq7/dy5H390ue7fv3q1JhqW1nAOyMVWNCQ/NJrHH3/nHbmc41Qqj8ftdjhkMo9HaI7jYmN791Yqu3ZNSbHb//571y6322S6d0/Il8tlMrlcoVAqUcrlslgOH/78c4/H6bTZaPgNhhkzNm3yeKzW0lIAyGKRywFKuVyl0uvd7vLy27dRG9pETQqFwdCuncdjt1dUeDw2W3k5UnneZNq9e/Fip7Oo6NgxoXX2GxwOiEoRz78fjWbo0AULXK7bt8+fdzpv3z53zrtZwEilohRcazQYWp3Om4bn27cfOJDj2rXr29dszspKSxNy0QBdm80HD65Y4XBcubJ/v1abkvLee2r1o4++/LLR+P33Tz4pkwGaVH9U1JIlp05BZvz8s8WSnf3VV4AOx4nJIaEt9ttwDohCBGqE4j9l1uG4ejUzExpJSgo9xyQVrNajR7/5hufj44cPt9svX963T6cbPXrZMkgMux0S5c4daCGHDhFEqnYTLVCKXj95Mga7+ic6+o03zpypniqTqdWDB8+bR9+UazLt3PnqqwQyX3qWEggHRCEikykUHGeznTmzdavTeevW2bMyGSSEQqHRREVhsoBmAD1AaB6qqMNx7drhwwQgtxs6hNNZUpKbS/UAdBwHAKFMJQSt1iNHVq5EK7m5avWAAc8/r1T27Dlxosm0Y8f8+VQb2lKpDIapU9eutdvz8vbutdvPn8/IIClCck7oCfsNJgdEIULzvcXyxx9ffonJon9/EuZud0WF0yl0AUNut1+4sH27XK7Xx8YSLDA1gIa+sQ6y2XJzt24lbYPKkq5D1w5HUdGJE05nYeGRIzzfufOoUdBeIC2SkmbOxITkdhO8iN7tLi29cQOy7dAhSmHfjccBUYhQkxwXHZ2QUKlUlpURdHw7xPMJCcnJvukqVVLSjBl2+6VLe/ZYLJmZn34q0CiVer1wXbkYdrnu3bt0CbDbsUPIxS/pLZTuct29e/Gidy67bjwO1AERmQx2EWrebM7M/OwzrESeeIKUR6QLKmdNXcST73Dk5x88CCmybZs3jUIRGdmhg5CCSUSrTU396CPIHugxRmNJiZBb/RcrqcREqqF2yuol2f/6c6AOiAjKKSrmuFatunTBQvTWLaGh2gACLQEfpVKng4wZMcLpvHEjJ4fKQj7Fx9O1x1NRce8e1N6hQzGpDRgAK4jDIehAQmvoA1ZGtCTGUrmszGo9fjw9vZKCXQWbA/WAiEr1yCPPPENDLpfrdG3auN0PH167Bi2kbVta7sJ4VVBAncRT3r49nvJbt3jeaCwuNpm8IRIT07s3WT5crgcPCgrKy7dsmTJFoxkxYskSLH3ffdfpLC4+ccJqzclZvVqjSU5eupRgBA3piy8YOIINhprrqwMiSmX37mPGkGXTaFy/fvx4tXrIkFde0WphUjMat2yZOpXn8WQbDLNmbd3qct25c+ECmeo5rnXr6dMtloMHly8XVjroBCAVE8NxcXFJSaSjeHeNAEETGWDx+uu0uCVowoKyfLnNdurUhg3epdh143FAFCI836kTxH7nzsnJeJpPneL5Ll1SUmA479uXOkT2DI5r06ZHDwztmjUwqE+bplBERLRv73L988+VKxzXocPAgTQ1YOVy/Lha3b//7Nm06KWphMzwCkVUVKdOPB8X16+ft/JLCjJBRKeDvqJS9eo1aRLqv3zZ47FYHj4k2y4zwDcGUEQhAvO20UgDYLUeO7Z6tcEwfTqeXSihgvFbrY6IgITIyqJlLYT/mjUazbBhixaRYV6rHTly6VLYQhwOo3Ht2tRU2DN++YXkE11HRS1alJNDkoMG3mY7fXrzZrJ80DQEyA4ZQusjnu/YcfBgtXrgwMGDiSlE3xgMYnWKvqMh1uDJjo/Hu9aiIhok2CQKC2E5vXvXH/aR/IBe0rEjDb9QCu9WyHYCOdS9O1q5eRNGuZpe6QmlKn8JUiR7ID/y8yvz2FXwOFAHRILXEKtJqhxgW4qkOnJN1m8GkSZjtVQbYhCR6sg1Wb8ZRJqM1VJtSHTRGz43BNPZ/PnYOIQVkDQ+ZBSAIeCHH6TRY/FeSoDpMMZjcyTe9YjfSHjlkJmAQSS8RqWF9IbjYmJ69aJdw763DGv1uXNku/LNbViKBKRIw26suZZSqRITJ0/WaEaOfPNN33s0m/fvX7YMe/wKC31zG5bC1NWG8a0FlWIQaUGD3bBbZRBpGN9aUCkGkRY02A27VQaRhvGtBZVqtisa2mVSUbFr18KFoRhP7I8JRbvBb7PZQgRePzYbXC7y8oLPtpZUYzOGiDSGMTr67bfz8shB3r8e01asmml1unHjVqzQ6caM+fjjmimqprrd8CIoK/v22yFDquZU/mMQqeRFSK4qPZKC0zz8I8nZ1p/60LrguC9Gz9RVMc6w9P84wCDCoFAHB9hEUweDGjubPA3QihBKo/YWMTXAhRYurr6UwuZwf9dTaN1k8q3HO4VBxJsbIbguLV25MinJ/4a12lGj3npL7DUeOdZTqA7/66ydkk00tfOH5cpahBShGAJw7ho7VqGIju7cWaHQ69u0gWdyTAyhgJzK6NvthocfbCoXL8JV/dgxcjFvmXhpthAhp/PIyLlz9+6tKYyW/8ONADjkq2y35+cfOGCz/fnnxo0tBzTNFiJyuUYTHc1x+PYfDjVRUnykuLj+/bVafFOIQJvt5Ml166xWfNNO1ZrKNoc0povUexThgmowkMIYGTlv3v792CbYp0+9K5JIAQaRgAaKtJyIiBdf3LFDCLQRUIVhWJhBJAiDQq7tiJywbh3CbYwcGYRKw6aKZquLhILD8PXR659++uuvjcYNGyZORGjy+/eD2xMESD5/3mY7e/ann3xrRuyFYEdIYBDx5XNAKVhOx8bq9U89tXKlyZSR8dJLAVXnUxjhBQ8coG+fzEZJaEETDRmnG+PJ9h0ZCr+jVHbpMmqUb660UpqlFIEdg2InIVp8RobDUVx88qQ3OITAOK1ade2KmGzdusGFqWdPij1PC+bABxJx4RB2/Pr17OzAawtVDZKASOWBArWzCfGfjx6tqNi378MPEc3x+nUxeoqfRgYxIYQfaPF2Y8sWnW7SpLQ0ssaK1eBPOsWopVhw0o2jxL3//rhxUVH+3HCoaByOwsLsbJ7v0GHQIMz0gslc6A8khtkMWFA8RTq6RMit3y9BB8H1du+mc3ACXcrK5UIsfKkehCIBXcTlwiEFRuPGjZMnCweMABYYTpOpvBwqoc2G40fqB4e6qCFRNm+mwwvqoq0tHzHihLB9tdGFa54kY52R6zN2WHAcvWxrPPYqlT16jB9PNo+GtUKSCS/9+/VDQHS3u2H1hKqUBKSIL2so8mJjg4PapeVlIG2RagxY9+7tey/hnyJJiDQ1W3FISn5+ZmYg7cJUHxcXSA2hKssg4hfnK0/p84u8BiKc+Rfey4IaOv1vEoOIGGeqpAMi4oefVCEV+SOXa7WBbksQqbqRkxlE/GJw1SNW/CpSjQjmOCZFqjGlOf0NfKLBWqb203vClV9Mivg5MoEuViudIfxsMGzIGET8GgraOuQXqQgRbL5Go0hmWCcziPg1PIBIx45+kYoQMSkiwpjmkkyHMAVyN0yKBMI9CZQNXIpQsF4J3KpPF9lE48OSmhJwHFt93Cq968DxTnfuBL5s9q6zKa8ZROrgNsfhUFg6I7AOUpFsl6ukJDdXJFMCyRKDCI5enDkzWLvC/BkfrRanfPpDKUbjdJaUnDkjlhv+6ZKBCJ2Bp9NNnJiWBgenffsa2x0BZ4n26YPNAOPGBTKQOJ/0+PFAaghtWclABKd2IvYhAjVhfREXFxExe/a2bYjutXx5cOUK7UeBu8OqVRge/yJ/+A4kthDk5TmdN2+ePu2bK5UUCUAEh9K3bYspZtas6mzF+9PHHps7Nypq4cLsbDr8NZDoYWr1gAGzZ0dEzJnz22+04bl6i/X5j6NhN22qT4lwpJXA9mbsI1+wQCwuDzEVUImI0GpTUz/4AEfKL15st+fl/f67cMQz3JO8jVd04jjPx8YmJioU+FYq4UUX6E5VYYipLbv9r79+/VVIk+pvWEMEL9BbtVKrBw164QX/GUxwIcWWvqmsABG32+lEza1b+19nfSlx+HV6OrYimc31LRtu9GENEY2GjjwLznlWgE5kZGMPAELW5OTg1PPvvmvstpqm/jDVRTCcBgP0jDlzmoYRgbdCEY4qKvbswWFCgb4ZDrw/waohTCGCpeaECU3z3AfOSkxh5eUm065dixYFY2dJ4D0KZg1hOtFA0du5k07V1GrHjv3kEwr8EsxbD0ZddAqdybR9+7x50vW3q50TYSpFqNNwoMrIMBrXr58wgZwxa7+Zpsx1OAoKsrKMxs2bn322uYKD+CkxVyueT0gYPhzRxl57DQvU0aNxGw01bdUXUnAlP3zYaj16dNUq2ExPnqxvDVKklxhEvFlM7tQqFYxdZNVAzLHEREBGEaB0pCiJd+8iqCZ8cW02ePmS66h3H1rCtYQh4js8ZIbn+fj4YcPwhgVmMdg/yL6CKKu4Rmhscg1HfNWyMrrGeqS0FH5+MJkXFZ04IdhRfNtpWSnNCiIta+ia6m4DFMhN1U3WTug4wCASOt5LpGUGEYkMVOi6ySASOt5LpGUGEYkMVOi6ySASOt5LpGUGEYkMVOi6+X/voBqohrNEngAAAABJRU5ErkJggg==')))
        if color == 60: # 6-
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'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')))
        if color == 61: # 6+
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'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')))
        if color == 70: # 7
            return QPixmap(QSize(91, 91)).fromImage(QImage.fromData(QByteArray.fromBase64(b'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')))

    def Hist_tg(self, _hd, _tag1, _tag2, _tag3):
        _ht1 = _tag1.split('.')[0]
        _tn1 = '.'.join(_tag1.split('.')[1:])
        _ht2 = _tag2.split('.')[0]
        _tn2 = '.'.join(_tag2.split('.')[1:])
        _ht3 = _tag3.split('.')[0]
        _tn3 = '.'.join(_tag3.split('.')[1:])
        _tn1 = re.findall('<{} class="{}">(.+)'.format(_ht1, _tn1, _ht1), _hd)
        _tn2 = [_t for _t in re.findall('<{} class="{}">(.+)</{}>'.format(_ht2, _tn2, _ht2), _hd) if '震源地：' in _t]
        _ta = ''.join(_hd.split('<{} class="{}">'.format(_ht3, _tn3))[1:]).split('</div>')[0]
        _tb = [_y.replace('<em>', '').replace('</em>', '') for _y in re.findall('-->(.+)<', _ta)]
        _tt = [re.sub('<em (.+)>', '', _y) for _y in _tb]
        _tc = '#'.join(_tt).replace('#最', '),最')
        _te = ''.join(_tc.split('#')).replace('M', ' (M').split(',')
        _tn3 = [_yt.replace(_yt[-1], _yt[-1] + ')').replace(').', '.') if not ')' in _yt else _yt for _yt in _te]
        return _tn1, _tn2, _tn3

    def Hist_Main(self):
        _ht = self.Hist_tg(_gg[0].decode(), 'dd.subText', 'dt.title', 'dd.eqScale')
        _es = _ht[0]
        _et = _ht[1]
        _esc = _ht[2]

        for _p in range(10):
            if _esc[_p].split(' ')[1].split(')')[0] == '1':
                _c = self.colorIcon(10)
            if _esc[_p].split(' ')[1].split(')')[0] == '2':
                _c = self.colorIcon(20)
            if _esc[_p].split(' ')[1].split(')')[0] == '3':
                _c = self.colorIcon(30)
            if _esc[_p].split(' ')[1].split(')')[0] == '4':
                _c = self.colorIcon(40)
            if _esc[_p].split(' ')[1].split(')')[0] == '5弱':
                _c = self.colorIcon(50)
            if _esc[_p].split(' ')[1].split(')')[0] == '5強':
                _c = self.colorIcon(51)
            if _esc[_p].split(' ')[1].split(')')[0] == '6弱':
                _c = self.colorIcon(60)
            if _esc[_p].split(' ')[1].split(')')[0] == '6強':
                _c = self.colorIcon(61)
            if _esc[_p].split(' ')[1].split(')')[0] == '7':
                _c = self.colorIcon(70)
            if _esc[_p].split(' ')[1].split(')')[0] == '---':
                _esc[_p] = _esc[_p].replace('---', '不明')
                _c = self.colorIcon(0)
            _esc[_p] = _esc[_p].split(' ')[0] + ' ' + _esc[_p].split(' ')[1] + ' ' + ' '.join(_esc[_p].split(' ')[2:])
            EqText = QStandardItem('{}\n{}\n{}'.format(_es[_p], _et[_p], _esc[_p]))
            self.EqListViewModel.appendRow(EqText)
            EqText.setData(QIcon(_c), Qt.DecorationRole)
        self.EqListView.setIconSize(QSize(75, 75))
        self.EqListView.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.EqListView.setModel(self.EqListViewModel)

    def retranslateUi(self, EarthQuake):
        EarthQuake.setWindowTitle("EarthquakeInfomation v1.0.3")
        self.RefreshButton.setText("更新")
        self.AutoRefresh.setText("自動更新")
        self.RefreshRateLabel.setText("更新間隔:")
        self.RefreshRateLabel2.setText("分")
        self.label.setText("EarthquakeInfomation")

def main():
    App = QApplication(sys.argv)
    Main_Window = MainWindow()
    Ui = Ui_EarthQuake()
    Ui.setupUi(Main_Window)
    Main_Window.setFixedSize(Main_Window.size())
    Main_Window.show()
    App.exec()

if __name__ == '__main__':
    main()
